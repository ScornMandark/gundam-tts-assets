  disableSave = false
  buttonFontColor = {0,0,0}
  buttonColor = {1,1,1}
  buttonScale = {1,1,1}

  defaultButtonData = {
  textbox = {
  --Unit's integrity
  {
      alignment=3,
      pos={-0.675,0.05,-0.4625},
      rotation={0,0,0},
      height=60,
      width=60,
      font_size=32,
      color={1,1,1},
      font_color={0,0,0},
      value=""
  },
  --Unit's dodge tokens
  {
      alignment=3,
      pos={0.15,0.05,-0.4625},
      rotation={0,0,0},
      height=60,
      width=50,
      font_size=32,
      color={1,1,1},
      font_color={0,0,0},
      value=""
  },
  --Unit's shield integrity
  {
      alignment=3,
      pos={0.15,0.05,-0.7125},
      rotation={0,0,0},
      height=60,
      width=50,
      font_size=32,
      color={1,1,1},
      font_color={0,0,0},
      value=""
  },
  --Unit's cost sum
  {
      alignment=3,
      pos={0.625,0.05,-0.87},
      rotation={0,0,0},
      height=55,
      width=100,
      font_size=32,
      color={0.47,0.47,0.47},
      font_color={0,0,0},
      value=""
  },
  --Unit's label
  {
      alignment=3,
      pos={0,0,-1.10},
      rotation={0,0,0},
      height=100,
      width=200,
      font_size=75,
      color={0.15,0.15,0.15},
      font_color={1,1,1},
      value=""
  },
  --Pilot's name
  {
      alignment=2,
      pos={0.4,-0.005,-0.95},
      rotation={0,0,180},
      height=50,
      width=300,
      font_size=26,
      color={0.47,0.47,0.47},
      font_color={0,0,0},
      value=""
  },
  --Pilot's cost
  {
      alignment=2,
      pos={-0.15,-0.005,-0.90},
      rotation={0,0,180},
      height=40,
      width=80,
      font_size=16,
      color={0.47,0.47,0.47},
      font_color={0,0,0},
      value=""
  },
  --Pilot's XP
  {
      alignment=2,
      pos={0.4875,-0.005,-0.85},
      rotation={0,0,180},
      height=40,
      width=80,
      font_size=16,
      color={0.47,0.47,0.47},
      font_color={0,0,0},
      value=""
  },
  --Pilot's rank
  {
      alignment=2,
      pos={0.4,-0.005,-0.775},
      rotation={0,0,180},
      height=40,
      width=40,
      font_size=16,
      color={0.47,0.47,0.47},
      font_color={0,0,0},
      value=""
  },
  --Pilot's level
  {
      alignment=2,
      pos={0.35,-0.005,-0.7125},
      rotation={0,0,180},
      height=40,
      width=40,
      font_size=16,
      color={0.47,0.47,0.47},
      font_color={0,0,0},
      value=""
  },
  --Pilot's health
  {
      alignment=3,
      pos={-0.02,-0.005,-0.825},
      rotation={0,0,180},
      height=40,
      width=40,
      font_size=16,
      color={0.47,0.47,0.47},
      font_color={0,0,0},
      value=""
  },
  --Pilot's mind
  {
      alignment=3,
      pos={-0.02,-0.005,-0.735},
      rotation={0,0,180},
      height=40,
      width=40,
      font_size=16,
      color={0.47,0.47,0.47},
      font_color={0,0,0},
      value=""
  },

  --First pair of traits
  {
      alignment=2,
      pos={0.447,-0.005,-0.63},
      rotation={0,0,180},
      height=50,
      width=205,
      font_size=25,
      color={1,1,1},
      font_color={0,0,0},
      value=""
  },
  {
      alignment=2,
      pos={0.017,-0.005,-0.63},
      rotation={0,0,180},
      height=50,
      width=205,
      font_size=25,
      color={1,1,1},
      font_color={0,0,0},
      value=""
  },
  --Next pair of traits
  {
      alignment=2,
      pos={0.447,-0.005,-0.53},
      rotation={0,0,180},
      height=50,
      width=205,
      font_size=25,
      color={1,1,1},
      font_color={0,0,0},
      value=""
  },
  {
      alignment=2,
      pos={0.017,-0.005,-0.53},
      rotation={0,0,180},
      height=50,
      width=205,
      font_size=25,
      color={0.8,0.8,0.8},
      font_color={0,0,0},
      value=""
  },
  --Next pair of traits
  {
      alignment=2,
      pos={0.447,-0.005,-0.43},
      rotation={0,0,180},
      height=50,
      width=205,
      font_size=25,
      color={1,1,1},
      font_color={0,0,0},
      value=""
  },
  {
      alignment=2,
      pos={0.017,-0.005,-0.43},
      rotation={0,0,180},
      height=50,
      width=205,
      font_size=25,
      color={0.8,0.8,0.8},
      font_color={0,0,0},
      value=""
  },
  --Next pair of traits
  {
      alignment=2,
      pos={0.447,-0.005,-0.33},
      rotation={0,0,180},
      height=50,
      width=205,
      font_size=25,
      color={1,1,1},
      font_color={0,0,0},
      value=""
  },
  {
      alignment=2,
      pos={0.017,-0.005,-0.33},
      rotation={0,0,180},
      height=50,
      width=205,
      font_size=25,
      color={0.8,0.8,0.8},
      font_color={0,0,0},
      value=""
  },
  }
  }

  function updateSave()
      saved_data = JSON.encode(ref_buttonData)
      if disableSave==true then saved_data="" end
      self.script_state = saved_data
  end

  function onload(saved_data)
      if disableSave==true then saved_data="" end
      if saved_data ~= "" then
          local loaded_data = JSON.decode(saved_data)
          ref_buttonData = loaded_data
      else
          ref_buttonData = defaultButtonData
  end

  spawnedButtonCount = 2
--  createCheckbox()
--  createTextbox()
  createCritBoxes()
  createWeaponSliders()
  createShieldSliders()
  createMoraleSliders()
  createIntegritySliders()
  createHealthSliders()
  createMindSliders()
  end

  function onLoad()
      WeapPos=-0.220
      ShieldPos=0.615
      IntegrityPos = 0.621
      HealthPos = 0.614
      MindPos = 0.614
      MoralePos = 0.223
      HeadCrit = false
      ArmCrit01 = false
      ArmCrit02 = false
      LegCrit01 = false
      LegCrit02 = false
      TorsoCrit = false

  end


  function createTextbox()
      for i, data in ipairs(ref_buttonData.textbox) do
          local funcName = "textbox"..i
          local func = function(_,_,val,sel) click_textbox(i,val,sel) end
          self.setVar(funcName, func)

          self.createInput({
              input_function = funcName,
              function_owner = self,
              label = "",
              alignment = data.alignment,
              position = data.pos,
              rotation = data.rotation,
              height = data.height,
              width = data.width,
              font_size = data.font_size,
              color = data.color,
              font_color = data.font_color,
              value = data.value,
              })
      end
  end

  function createCritBoxes()
    self.createButton({click_function="HeadCritToggle",
    function_owner=self, label="", position={0.585,0.05,-0.57}, rotation={0,0,0},
    height=20, width=20, font_size=20, color={1,1,1}, font_color={0,0,0}}) --button0

    self.createButton({click_function="ArmCritToggle01",
    function_owner=self, label="", position={0.585,0.05,-0.495}, rotation={0,0,0},
    height=20, width=20, font_size=20, color={1,1,1}, font_color={0,0,0}})

    self.createButton({click_function="ArmCritToggle02",
    function_owner=self, label="", position={0.6275,0.05,-0.495}, rotation={0,0,0},
    height=20, width=20, font_size=20, color={1,1,1}, font_color={0,0,0}})

    self.createButton({click_function="LegCritToggle01",
    function_owner=self, label="", position={0.585,0.05,-0.175}, rotation={0,0,0},
    height=20, width=20, font_size=20, color={1,1,1}, font_color={0,0,0}})

    self.createButton({click_function="LegCritToggle02",
    function_owner=self, label="", position={0.6275,0.05,-0.175}, rotation={0,0,0},
    height=20, width=20, font_size=20, color={1,1,1}, font_color={0,0,0}})

    self.createButton({click_function="TorsoCritToggle",
    function_owner=self, label="", position={0.585,0.05,-0.075}, rotation={0,0,0},
    height=20, width=20, font_size=20, color={1,1,1}, font_color={0,0,0}})

  end

  function createWeaponSliders()
    self.createButton({click_function="WeapUp",
    function_owner=self, label="▲", position={-0.675,0.06,-0.275}, rotation={0,0,0},
    height=30, width=30, font_size=30, color={1,1,1}, font_color={0,0,0}})

    self.createButton({click_function="WeapDown",
    function_owner=self, label="▼", position={-0.675,0.06,0.045}, rotation={0,0,0},
    height=30, width=30, font_size=30, color={1,1,1}, font_color={0,0,0}})

    self.createButton({click_function='nothing',
    function_owner=self, label="►", position={-0.675,0.06,WeapPos},
    height=30, width=30, font_size=30, color={0,0,0}, font_color={1,1,1}}) --button8
  end

  function createShieldSliders()
    self.createButton({click_function="ShieldUp",
    function_owner=self, label="►", position={0.65,0.06,.125}, rotation={0,0,0},
    height=20, width=20, font_size=20, color={1,1,1}, font_color={0,0,0}})

    self.createButton({click_function="ShieldDown",
    function_owner=self, label="◄", position={0.45,0.06,0.125}, rotation={0,0,0},
    height=20, width=20, font_size=20, color={1,1,1}, font_color={0,0,0}})

    self.createButton({click_function='nothing',
    function_owner=self, label="▲", position={ShieldPos,0.06,0.125},
    height=20, width=20, font_size=20, color={0,0,0}, font_color={1,1,1}}) --button11

  end

  function createMoraleSliders()
    self.createButton({click_function="MoraleUp",
    function_owner=self, label="▲", position={0.68,0.06,0.185}, rotation={0,0,0},
    height=20, width=20, font_size=20, color={1,1,1}, font_color={0,0,0}})

    self.createButton({click_function="MoraleDown",
    function_owner=self, label="▼", position={0.68,0.06,0.300}, rotation={0,0,0},
    height=20, width=20, font_size=20, color={1,1,1}, font_color={0,0,0}})

    self.createButton({click_function='nothing',
    function_owner=self, label="◄", position={0.618,0.06,MoralePos},
    height=20, width=20, font_size=20, color={0,0,0}, font_color={1,1,1}}) --button14
  end

  function createIntegritySliders()
    self.createButton({click_function="IntegrityUp",
    function_owner=self, label="►", position={0.678,0.06,.364}, rotation={0,0,0},
    height=20, width=20, font_size=20, color={1,1,1}, font_color={0,0,0}})

    self.createButton({click_function="IntegrityDown",
    function_owner=self, label="◄", position={-.43,0.06,0.364}, rotation={0,0,0},
    height=20, width=20, font_size=20, color={1,1,1}, font_color={0,0,0}})

    self.createButton({click_function='nothing',
    function_owner=self, label="▼", position={IntegrityPos,0.06,0.364},
    height=30, width=30, font_size=30, color={0,0,0}, font_color={1,1,1}}) --button17

  end

  function createHealthSliders()
    self.createButton({click_function="HealthUp",
    function_owner=self, label="►", position={0.678,0.06,.467}, rotation={0,0,0},
    height=20, width=20, font_size=20, color={1,1,1}, font_color={0,0,0}})

    self.createButton({click_function="HealthDown",
    function_owner=self, label="◄", position={-.475,0.06,0.467}, rotation={0,0,0},
    height=20, width=20, font_size=20, color={1,1,1}, font_color={0,0,0}})

    self.createButton({click_function='nothing',
    function_owner=self, label="▼", position={HealthPos,0.06,0.462},
    height=20, width=20, font_size=20, color={0,0,0}, font_color={1,1,1}}) --button20

  end

  function createMindSliders()
    self.createButton({click_function="MindUp",
    function_owner=self, label="►", position={0.678,0.06,.574}, rotation={0,0,0},
    height=20, width=20, font_size=20, color={1,1,1}, font_color={0,0,0}})

    self.createButton({click_function="MindDown",
    function_owner=self, label="◄", position={-.475,0.06,0.574}, rotation={0,0,0},
    height=20, width=20, font_size=20, color={1,1,1}, font_color={0,0,0}})

    self.createButton({click_function='nothing',
    function_owner=self, label="▼", position={MindPos,0.06,0.569},
    height=20, width=20, font_size=20, color={0,0,0}, font_color={1,1,1}}) --button23

  end

  function HeadCritToggle()
    if HeadCrit == true
      then
        HeadCrit = false
        self.editButton({index=0, label=""})
      else
        HeadCrit = true
        self.editButton({index=0, label="█"})
      end
  end

  function ArmCritToggle01()
    if ArmCrit01 == true
      then
        ArmCrit01 = false
        self.editButton({index=1, label=""})
      else
        ArmCrit01 = true
        self.editButton({index=1, label="█"})
      end
  end

  function ArmCritToggle02()
    if ArmCrit02 == true
      then
        ArmCrit02 = false
        self.editButton({index=2, label=""})
      else
        ArmCrit02 = true
        self.editButton({index=2, label="█"})
      end
  end

  function LegCritToggle01()
    if LegCrit01 == true
      then
        LegCrit01 = false
        self.editButton({index=3, label=""})
      else
        LegCrit01 = true
        self.editButton({index=3, label="█"})
      end
  end

  function LegCritToggle02()
    if LegCrit02 == true
      then
        LegCrit02 = false
        self.editButton({index=4, label=""})
      else
        LegCrit02 = true
        self.editButton({index=4, label="█"})
      end
  end

  function TorsoCritToggle()
    if TorsoCrit == true
      then
        TorsoCrit = false
        self.editButton({index=5, label=""})
      else
        TorsoCrit = true
        self.editButton({index=5, label="█"})
      end
  end


  function WeapUp()
      if WeapPos>-0.168 then
          WeapPos=WeapPos-0.0525
          updateDisplay()
      end
  end

  function WeapDown()
      if WeapPos<-0.011 then
          WeapPos=WeapPos+0.0525
          updateDisplay()
      end
  end

  function ShieldUp()
      if ShieldPos<0.581 then
          ShieldPos=ShieldPos+0.035
          updateDisplay()
      end
  end

  function ShieldDown()
      if ShieldPos>0.509 then
          ShieldPos=ShieldPos-0.035
          updateDisplay()
      end
  end
  function MoraleUp()
      if MoralePos>0.255 then
          MoralePos=MoralePos-0.038
          updateDisplay()
      end
  end

  function MoraleDown()
      if MoralePos<0.29 then
          MoralePos=MoralePos+0.038
          updateDisplay()
      end
  end

  function IntegrityUp()
      if IntegrityPos<0.540 then
          IntegrityPos=IntegrityPos+0.0825
          updateDisplay()
      end
  end

  function IntegrityDown()
      if IntegrityPos>-0.295 then
          IntegrityPos=IntegrityPos-.0825
          updateDisplay()
      end
  end

  function HealthUp()
      if HealthPos<0.525 then
          HealthPos=HealthPos+0.092
          updateDisplay()
      end
  end

  function HealthDown()
      if HealthPos>-0.31 then
          HealthPos=HealthPos-.092
          updateDisplay()
      end
  end

  function MindUp()
      if MindPos<0.525 then
          MindPos=MindPos+0.092
          updateDisplay()
      end
  end

  function MindDown()
      if MindPos>-0.31 then
          MindPos=MindPos-.092
          updateDisplay()
      end
  end

  function updateDisplay()
    self.editButton({index=8, position={-0.675,0.06,WeapPos}})
    self.editButton({index=11, position={ShieldPos,0.06,0.125}})
    self.editButton({index=14, position={0.618,0.06,MoralePos}})
    self.editButton({index=17, position={IntegrityPos,0.06,0.364}})
    self.editButton({index=20, position={HealthPos,0.06,0.462}})
    self.editButton({index=23, position={MindPos,0.06,0.569}})
  end


  function click_textbox(i, value, selected)
      if selected == false then
          ref_buttonData.textbox[i].value = value
          updateSave()
      end
  end

  function nothing()
  end
