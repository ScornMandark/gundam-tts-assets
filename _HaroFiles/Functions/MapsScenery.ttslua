
--[[Maps and Scenery]]

function createMaps()
  self.clearButtons()
  self.createButton({click_function = 'fourByFour', function_owner = self, label = '48 x 48', position = {1.5, 4, 0},  rotation = {-60, 0, 0}, width=1200, height=400, font_size=250})
  self.createButton({click_function = 'twoByThree', function_owner = self, label = '24 x 36', position = {-1.5, 4, 0},  rotation = {-60, 0, 0}, width=1200, height=400, font_size=250})
  self.createButton({click_function = 'fourBySix', function_owner = self, label = '48 x 72', position = {1.5, 5, 0},  rotation = {-60, 0, 0}, width=1200, height=400, font_size=250})
  self.createButton({click_function = 'newFourBySix', function_owner = self, label = '44 x 60', position = {-1.5, 5, 0},  rotation = {-60, 0, 0}, width=1200, height=400, font_size=250})
  self.createButton({click_function = 'createSelector', function_owner = self, label = 'Back', position = {0, 3, 0},  rotation = {-60, 0, 0}, width=1200, height=400, font_size=250})
end

function twoByThree()
  mapSize = 'twoByThree'
  environmentSelector()
end

function fourByFour()
  mapSize = 'fourByFour'
  environmentSelector()
end

function fourBySix()
  mapSize = 'fourBySix'
  environmentSelector()
end

function newFourBySix()
  mapSize = 'newFourBySix'
  environmentSelector()
end

function environmentSelector()
  self.clearButtons()
  self.createButton({click_function = 'setDesert', function_owner = self, label = 'Desert', position = {3, 4, 0},  rotation = {-60, 0, 0}, width=1200, height=400, font_size=250})
  self.createButton({click_function = 'setCountry', function_owner = self, label = 'Country', position = {0, 4, 0},  rotation = {-60, 0, 0}, width=1200, height=400, font_size=250})
  self.createButton({click_function = 'setUrban', function_owner = self, label = 'Urban', position = {-3, 4, 0},  rotation = {-60, 0, 0}, width=1200, height=400, font_size=250})
end

function setDesert()
  environmentType = 'Desert'
  TableMaker()
end

function setCountry()
  environmentType = 'Country'
  TableMaker()
end

function setUrban()
  environmentType = 'Urban'
  TableMaker()
end

function TableMaker()
  self.clearButtons()
  self.createButton({click_function = 'randomScenery', function_owner = self, label = 'Random Scenery', position = {3, 4, 0},  rotation = {-60, 0, 0}, width=2400, height=400, font_size=250})
  self.createButton({click_function = 'manualScenery', function_owner = self, label = 'Manual Scenery', position = {-3, 4, 0},  rotation = {-60, 0, 0}, width=2400, height=400, font_size=250})
end

function randomScenery()
  sceneryPicker = true
  makeATable()
end

function manualScenery()
  sceneryPicker = false
  makeATable()
end

function makeATable()
  self.clearButtons()
  initializeHaro()
end

function createScenery()
  self.clearButtons()
  self.createButton({click_function = 'makeATree', function_owner = self, label = 'Tree', position = {-1.5, 4, 0},  rotation = {-60, 0, 0}, width=1200, height=400, font_size=250})
  self.createButton({click_function = 'makeABuilding', function_owner = self, label = 'Building', position = {1.5, 4, 0},  rotation = {-60, 0, 0}, width=1200, height=400, font_size=250})
  self.createButton({click_function = 'createSelector', function_owner = self, label = 'Back', position = {0, 3, 0},  rotation = {-60, 0, 0}, width=1200, height=400, font_size=250})
end

function makeATree()
  MSPosAdjustment(MSPosOffset)
  forestParams = {
    type = 'Custom_Tile',
    position = {MSPos.x, MSPos.y, MSPos.z},
    rotation = {x=0, y=0, z=0},
    scale = {6*baseScaleMod*scaler,1,6*baseScaleMod*scaler},
  }
  baseParams = {
    type = 0,
    image = 'https://raw.githubusercontent.com/ScornMandark/gundam-tts-assets/main/blank.png',
    thickness = 0.05,
  }
  local forest = spawnObject(forestParams)
  forest.setCustomObject(baseParams)
  forest.setColorTint({0,0.0,0})
  forest.locked = true
  local randScale = scaler * (0.75+math.random()/2)
  spawnParams = {
      type = 'Custom_Assetbundle',
      position = {MSPos.x, MSPos.y, MSPos.z},
      rotation = {x=0, y=360 * math.random(), z=0},
      scale = {randScale, randScale, randScale},
      sound = false,
      snap_to_grid = false,
  }
  customParams = {
      assetbundle = 'https://github.com/ScornMandark/gundam-tts-assets/blob/main/scenery/trees.unity3d?raw=true',
      type = 1, --[[ figurine --]]
      material = 2, --[[ metal --]]
  }
  local tree = spawnObject(spawnParams)
  tree.setCustomObject(customParams)
  tree.locked = true
  local function treeSetter()
    tree.AssetBundle.playLoopingEffect(math.random(0,16))
  end
  Wait.frames(treeSetter, 60)
  local function treeCloner()
    for xes = 1, 5 do
      for zes = 1, 5 do
        randScale = scaler * (0.75+math.random()/2)
        local treePos = { position = {MSPos.x, MSPos.y+3, MSPos.z}}
        local cloneTreePos = { MSPos.x + (xes - 3 - math.random()/2)*scaler, MSPos.y, MSPos.z + (zes - 3 - math.random()/2)*scaler }
        local treeSpin = {x=0, y=45 * math.random(), z=0}
        local cloneTree = tree.clone(treePos)
        cloneTree.locked = true
        local function treeSpinner()
          cloneTree.AssetBundle.playLoopingEffect(math.random(0,16))
          cloneTree.rotate(treeSpin)
          cloneTree.scale(randScale)
        end
        Wait.frames(treeSpinner, 30)
        local function cloneTreeFixer()
           cloneTree.setPosition(cloneTreePos)
           forest.addAttachment(cloneTree)
        end
         -- if (xes != 3 and zes != 3) then
        Wait.frames(cloneTreeFixer, 30)
         -- end
      end
    end
  end
  Wait.frames(treeCloner, 30)
--  destroyObject(tree)
  local function forestUnlocker()
    forest.addAttachment(tree)
    forest.locked = false
  end
  Wait.frames(forestUnlocker, 60)
  createScenery()
end

